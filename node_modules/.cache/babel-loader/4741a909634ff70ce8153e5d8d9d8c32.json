{"ast":null,"code":"var _jsxFileName = \"/Users/ivan.osipau/Documents/Projects/Test SeverStal/test-sever/src/pages/TablePage/TablePage.tsx\",\n  _s = $RefreshSig$();\nimport { ButtonGroup } from \"../../components/ButtonGroup/ButtonGroup\";\nimport { FILTER_OPTIONS, TABLE_HEADERS } from \"./constants\";\nimport { Table } from \"../../components/Table/Table\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"../../components/Button/Button\";\nimport './styles.css';\nimport { BUTTON_COLOR, BUTTON_TXT } from \"../../components/Button/constans\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialSortKeys = {\n  balance: false,\n  email: false\n};\nconst initialActiveFilter = {\n  label: '',\n  value: ''\n};\nexport const TablePage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [tableData, setTableData] = useState(data);\n  const [activeFilter, setActiveFilter] = useState(initialActiveFilter);\n  const [sortKeys, setSortKeys] = useState(initialSortKeys);\n  const activeFilterHandler = option => {\n    const filteredArr = data.filter(item => item.isActive === option.status);\n    setTableData(filteredArr);\n    setActiveFilter(option);\n  };\n  const resetHandler = () => {\n    setActiveFilter(initialActiveFilter);\n    setSortKeys(initialSortKeys);\n    setTableData(data);\n  };\n  const sortHandler = key => {\n    let sortedArr = data;\n    if (activeFilter) {\n      sortedArr = [...tableData];\n    }\n    if (sortKeys[key]) {\n      sortedArr.sort((a, b) => a[key] > b[key] ? 1 : -1);\n    } else {\n      sortedArr.sort((a, b) => a[key] > b[key] ? -1 : 1);\n    }\n    setSortKeys({\n      ...sortKeys,\n      [key]: !sortKeys[key]\n    });\n    setTableData(sortedArr);\n  };\n  useEffect(() => {\n    fetch('http://localhost:3001/data').then(resp => {\n      console.log(resp);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-page\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      options: FILTER_OPTIONS,\n      onClick: activeFilterHandler,\n      active: activeFilter.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: BUTTON_COLOR.DANGER,\n      onClick: resetHandler,\n      children: BUTTON_TXT.RESET\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      headers: TABLE_HEADERS,\n      data: tableData,\n      sort: sortHandler,\n      activeFilter: activeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TablePage, \"vqiM/zgTm6mtNeKUu63R9N5E9mY=\");\n_c = TablePage;\nvar _c;\n$RefreshReg$(_c, \"TablePage\");","map":{"version":3,"names":["ButtonGroup","FILTER_OPTIONS","TABLE_HEADERS","Table","useEffect","useState","Button","BUTTON_COLOR","BUTTON_TXT","initialSortKeys","balance","email","initialActiveFilter","label","value","TablePage","data","setData","tableData","setTableData","activeFilter","setActiveFilter","sortKeys","setSortKeys","activeFilterHandler","option","filteredArr","filter","item","isActive","status","resetHandler","sortHandler","key","sortedArr","sort","a","b","fetch","then","resp","console","log","DANGER","RESET"],"sources":["/Users/ivan.osipau/Documents/Projects/Test SeverStal/test-sever/src/pages/TablePage/TablePage.tsx"],"sourcesContent":["import {ButtonGroup} from \"../../components/ButtonGroup/ButtonGroup\";\nimport {FILTER_OPTIONS, TABLE_HEADERS} from \"./constants\";\nimport {Table} from \"../../components/Table/Table\"\nimport data from \"../../../db.json\"\nimport {useEffect, useState} from \"react\";\nimport {Button} from \"../../components/Button/Button\";\nimport {TButtonGroupOption} from \"../../components/ButtonGroup/types\";\nimport './styles.css'\nimport {BUTTON_COLOR, BUTTON_TXT} from \"../../components/Button/constans\";\nimport {TUser} from \"../../types/types\";\n\nconst initialSortKeys = {balance: false, email: false}\nconst initialActiveFilter = {\n  label: '',\n  value: ''\n}\n\nexport const TablePage = () => {\n  const [data, setData] = useState<TUser[]>([])\n  const [tableData, setTableData] = useState<TUser[]>(data)\n  const [activeFilter, setActiveFilter] = useState<TButtonGroupOption>(initialActiveFilter)\n  const [sortKeys, setSortKeys] = useState<{[key: string]: boolean}>(initialSortKeys)\n\n  const activeFilterHandler = (option: TButtonGroupOption) => {\n    const filteredArr = data.filter(item => item.isActive === option.status)\n    setTableData(filteredArr)\n    setActiveFilter(option)\n  }\n\n  const resetHandler = () => {\n    setActiveFilter(initialActiveFilter)\n    setSortKeys(initialSortKeys)\n    setTableData(data)\n  }\n\n  const sortHandler = (key: keyof TUser) => {\n    let sortedArr: TUser[] = data\n    if (activeFilter) {\n      sortedArr = [...tableData]\n    }\n    if (sortKeys[key]) {\n      sortedArr.sort((a, b) => a[key] > b[key] ? 1 : -1)\n    } else {\n      sortedArr.sort((a, b) => a[key] > b[key] ? -1 : 1 )\n    }\n    setSortKeys({...sortKeys, [key]: !sortKeys[key]})\n    setTableData(sortedArr)\n  }\n\n  useEffect(() => {\n    fetch('http://localhost:3001/data').then(resp => {\n      console.log(resp)\n    })\n  })\n\n  return (\n    <div className=\"table-page\">\n      <ButtonGroup\n        options={FILTER_OPTIONS}\n        onClick={activeFilterHandler}\n        active={activeFilter.value}\n      />\n      <Button\n        color={BUTTON_COLOR.DANGER}\n        onClick={resetHandler}\n      >\n        {BUTTON_TXT.RESET}\n      </Button>\n      <Table\n        headers={TABLE_HEADERS}\n        data={tableData}\n        sort={sortHandler}\n        activeFilter={activeFilter}\n      />\n    </div>\n  )\n}"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,0CAA0C;AACpE,SAAQC,cAAc,EAAEC,aAAa,QAAO,aAAa;AACzD,SAAQC,KAAK,QAAO,8BAA8B;AAElD,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,MAAM,QAAO,gCAAgC;AAErD,OAAO,cAAc;AACrB,SAAQC,YAAY,EAAEC,UAAU,QAAO,kCAAkC;AAAC;AAG1E,MAAMC,eAAe,GAAG;EAACC,OAAO,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAK,CAAC;AACtD,MAAMC,mBAAmB,GAAG;EAC1BC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAU,EAAE,CAAC;EAC7C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAUW,IAAI,CAAC;EACzD,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAqBO,mBAAmB,CAAC;EACzF,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAA2BI,eAAe,CAAC;EAEnF,MAAMe,mBAAmB,GAAIC,MAA0B,IAAK;IAC1D,MAAMC,WAAW,GAAGV,IAAI,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKJ,MAAM,CAACK,MAAM,CAAC;IACxEX,YAAY,CAACO,WAAW,CAAC;IACzBL,eAAe,CAACI,MAAM,CAAC;EACzB,CAAC;EAED,MAAMM,YAAY,GAAG,MAAM;IACzBV,eAAe,CAACT,mBAAmB,CAAC;IACpCW,WAAW,CAACd,eAAe,CAAC;IAC5BU,YAAY,CAACH,IAAI,CAAC;EACpB,CAAC;EAED,MAAMgB,WAAW,GAAIC,GAAgB,IAAK;IACxC,IAAIC,SAAkB,GAAGlB,IAAI;IAC7B,IAAII,YAAY,EAAE;MAChBc,SAAS,GAAG,CAAC,GAAGhB,SAAS,CAAC;IAC5B;IACA,IAAII,QAAQ,CAACW,GAAG,CAAC,EAAE;MACjBC,SAAS,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACH,GAAG,CAAC,GAAGI,CAAC,CAACJ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD,CAAC,MAAM;MACLC,SAAS,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACH,GAAG,CAAC,GAAGI,CAAC,CAACJ,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAE;IACrD;IACAV,WAAW,CAAC;MAAC,GAAGD,QAAQ;MAAE,CAACW,GAAG,GAAG,CAACX,QAAQ,CAACW,GAAG;IAAC,CAAC,CAAC;IACjDd,YAAY,CAACe,SAAS,CAAC;EACzB,CAAC;EAED9B,SAAS,CAAC,MAAM;IACdkC,KAAK,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;MAC/CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,wBACzB,QAAC,WAAW;MACV,OAAO,EAAEvC,cAAe;MACxB,OAAO,EAAEuB,mBAAoB;MAC7B,MAAM,EAAEJ,YAAY,CAACN;IAAM;MAAA;MAAA;MAAA;IAAA,QAC3B,eACF,QAAC,MAAM;MACL,KAAK,EAAEP,YAAY,CAACoC,MAAO;MAC3B,OAAO,EAAEZ,YAAa;MAAA,UAErBvB,UAAU,CAACoC;IAAK;MAAA;MAAA;MAAA;IAAA,QACV,eACT,QAAC,KAAK;MACJ,OAAO,EAAE1C,aAAc;MACvB,IAAI,EAAEgB,SAAU;MAChB,IAAI,EAAEc,WAAY;MAClB,YAAY,EAAEZ;IAAa;MAAA;MAAA;MAAA;IAAA,QAC3B;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,GA3DYL,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}