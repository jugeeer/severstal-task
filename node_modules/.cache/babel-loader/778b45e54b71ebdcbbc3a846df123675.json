{"ast":null,"code":"var _jsxFileName = \"/Users/ivan.osipau/Documents/Projects/Test SeverStal/test-sever/src/components/Table/TableRow.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './table.row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TableRow = _ref => {\n  _s();\n  let {\n    option,\n    data,\n    expanded,\n    activeFilter\n  } = _ref;\n  const [isExpand, setExpand] = useState(false);\n  const [expandedData, setExpandedData] = useState([]);\n  const clickHandler = () => {\n    if (expandedData.length) setExpand(!isExpand);\n  };\n  useEffect(() => {\n    const arr = [...expandedData].filter(item => item.isActive === activeFilter.status);\n  }, [activeFilter]);\n  useEffect(() => {\n    const arr = data.filter(item => item.parentId === option.id);\n    setExpandedData(arr);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      onClick: clickHandler,\n      className: `${expanded && 'expanded'} ${!!expandedData.length && 'cursor'} `,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [!!expandedData.length && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plus-minus\",\n          children: isExpand ? '-' : '+'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 37\n        }, this), option.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: option.balance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: option.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: option.isActive ? 'Active' : 'Inactive'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), isExpand && expandedData.map(dataItem => {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        option: dataItem,\n        data: data,\n        expanded: true,\n        activeFilter: activeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(TableRow, \"jUYgV3NUBX10WOMZpOz0LgPQ35k=\");\n_c = TableRow;\nvar _c;\n$RefreshReg$(_c, \"TableRow\");","map":{"version":3,"names":["useEffect","useState","TableRow","option","data","expanded","activeFilter","isExpand","setExpand","expandedData","setExpandedData","clickHandler","length","arr","filter","item","isActive","status","parentId","id","name","balance","email","map","dataItem"],"sources":["/Users/ivan.osipau/Documents/Projects/Test SeverStal/test-sever/src/components/Table/TableRow.tsx"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport {TTableRow} from \"./types\";\nimport {TUser} from \"../../types/types\";\nimport './table.row.css'\n\nexport const TableRow = ({option, data, expanded, activeFilter}: TTableRow) => {\n  const [isExpand, setExpand] = useState<boolean>(false)\n  const [expandedData, setExpandedData] = useState<TUser[]>([])\n\n  const clickHandler = () => {\n    if (expandedData.length) setExpand(!isExpand)\n  }\n  \n  useEffect(() => {\n    const arr = [...expandedData].filter(item => item.isActive === activeFilter.status)\n  }, [activeFilter])\n\n  useEffect(() => {\n    const arr = data.filter((item) => item.parentId === option.id)\n    setExpandedData(arr)\n  }, [])\n\n  return (\n    <>\n      <tr\n        onClick={clickHandler}\n        className={`${expanded && 'expanded'} ${!!expandedData.length && 'cursor'} `}\n      >\n        <td>\n          {!!expandedData.length && <div className='plus-minus'>{isExpand ? '-' : '+'}</div>}\n          {option.name}\n        </td>\n        <td>{option.balance}</td>\n        <td>{option.email}</td>\n        <td>{option.isActive ? 'Active' : 'Inactive'}</td>\n      </tr>\n      {isExpand && expandedData.map(dataItem => {\n        return <TableRow option={dataItem} data={data} expanded={true} activeFilter={activeFilter}/>\n      })}\n    </>\n  )\n}"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAGzC,OAAO,iBAAiB;AAAA;AAAA;AAExB,OAAO,MAAMC,QAAQ,GAAG,QAAuD;EAAA;EAAA,IAAtD;IAACC,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAuB,CAAC;EACxE,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAU,EAAE,CAAC;EAE7D,MAAMU,YAAY,GAAG,MAAM;IACzB,IAAIF,YAAY,CAACG,MAAM,EAAEJ,SAAS,CAAC,CAACD,QAAQ,CAAC;EAC/C,CAAC;EAEDP,SAAS,CAAC,MAAM;IACd,MAAMa,GAAG,GAAG,CAAC,GAAGJ,YAAY,CAAC,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKV,YAAY,CAACW,MAAM,CAAC;EACrF,CAAC,EAAE,CAACX,YAAY,CAAC,CAAC;EAElBN,SAAS,CAAC,MAAM;IACd,MAAMa,GAAG,GAAGT,IAAI,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACG,QAAQ,KAAKf,MAAM,CAACgB,EAAE,CAAC;IAC9DT,eAAe,CAACG,GAAG,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE;MACE,OAAO,EAAEF,YAAa;MACtB,SAAS,EAAG,GAAEN,QAAQ,IAAI,UAAW,IAAG,CAAC,CAACI,YAAY,CAACG,MAAM,IAAI,QAAS,GAAG;MAAA,wBAE7E;QAAA,WACG,CAAC,CAACH,YAAY,CAACG,MAAM,iBAAI;UAAK,SAAS,EAAC,YAAY;UAAA,UAAEL,QAAQ,GAAG,GAAG,GAAG;QAAG;UAAA;UAAA;UAAA;QAAA,QAAO,EACjFJ,MAAM,CAACiB,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACT,eACL;QAAA,UAAKjB,MAAM,CAACkB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eACzB;QAAA,UAAKlB,MAAM,CAACmB;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACvB;QAAA,UAAKnB,MAAM,CAACa,QAAQ,GAAG,QAAQ,GAAG;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/C,EACJT,QAAQ,IAAIE,YAAY,CAACc,GAAG,CAACC,QAAQ,IAAI;MACxC,oBAAO,QAAC,QAAQ;QAAC,MAAM,EAAEA,QAAS;QAAC,IAAI,EAAEpB,IAAK;QAAC,QAAQ,EAAE,IAAK;QAAC,YAAY,EAAEE;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE;IAC9F,CAAC,CAAC;EAAA,gBACD;AAEP,CAAC;AAAA,GApCYJ,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}