{"ast":null,"code":"var _jsxFileName = \"/Users/ivan.osipau/Documents/Projects/Test SeverStal/test-sever/src/pages/TablePage/TablePage.tsx\",\n  _s = $RefreshSig$();\nimport { ButtonGroup } from \"../../components/ButtonGroup/ButtonGroup\";\nimport { FILTER_OPTIONS, TABLE_HEADERS } from \"./constants\";\nimport { Table } from \"../../components/Table/Table\";\nimport data from \"../../default.json\";\nimport { useState } from \"react\";\nimport { Button } from \"../../components/Button/Button\";\nimport './styles.css';\nimport { BUTTON_COLOR, BUTTON_TXT } from \"../../components/Button/constans\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialSortKeys = {\n  balance: false,\n  email: false\n};\nexport const TablePage = () => {\n  _s();\n  const [tableData, setTableData] = useState(data);\n  const [activeFilter, setActiveFilter] = useState('');\n  const [sortKeys, setSortKeys] = useState(initialSortKeys);\n  const activeFilterHandler = option => {\n    const filteredArr = data.filter(item => item.isActive === option.status);\n    setTableData(filteredArr);\n    setActiveFilter(option.value);\n  };\n  const resetHandler = () => {\n    setActiveFilter('');\n    setSortKeys(initialSortKeys);\n    setTableData(data);\n  };\n  const sortHandler = key => {\n    let sortedArr = data;\n    if (activeFilter) {\n      sortedArr = [...tableData];\n    }\n    if (sortKeys[key]) {\n      // @ts-ignore\n      sortedArr.sort((a, b) => a[key] > b[key] ? 1 : -1);\n    } else {\n      // @ts-ignore\n      sortedArr.sort((a, b) => a[key] > b[key] ? -1 : 1);\n    }\n    setSortKeys({\n      ...sortKeys,\n      [key]: !sortKeys[key]\n    });\n    setTableData(sortedArr);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-page\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      options: FILTER_OPTIONS,\n      onClick: activeFilterHandler,\n      active: activeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: BUTTON_COLOR.DANGER,\n      onClick: resetHandler,\n      children: BUTTON_TXT.RESET\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      headers: TABLE_HEADERS,\n      data: tableData,\n      sort: sortHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TablePage, \"lhS0a4ZXH+8GG39Cfz8d0Wa5vGA=\");\n_c = TablePage;\nvar _c;\n$RefreshReg$(_c, \"TablePage\");","map":{"version":3,"names":["ButtonGroup","FILTER_OPTIONS","TABLE_HEADERS","Table","data","useState","Button","BUTTON_COLOR","BUTTON_TXT","initialSortKeys","balance","email","TablePage","tableData","setTableData","activeFilter","setActiveFilter","sortKeys","setSortKeys","activeFilterHandler","option","filteredArr","filter","item","isActive","status","value","resetHandler","sortHandler","key","sortedArr","sort","a","b","DANGER","RESET"],"sources":["/Users/ivan.osipau/Documents/Projects/Test SeverStal/test-sever/src/pages/TablePage/TablePage.tsx"],"sourcesContent":["import {ButtonGroup} from \"../../components/ButtonGroup/ButtonGroup\";\nimport {FILTER_OPTIONS, TABLE_HEADERS} from \"./constants\";\nimport {Table} from \"../../components/Table/Table\"\nimport data from \"../../default.json\"\nimport {useEffect, useState} from \"react\";\nimport {Button} from \"../../components/Button/Button\";\nimport {TButtonGroupOption} from \"../../components/ButtonGroup/types\";\nimport './styles.css'\nimport {BUTTON_COLOR, BUTTON_TXT} from \"../../components/Button/constans\";\nimport {TUser} from \"../../types/types\";\n\nconst initialSortKeys = {balance: false, email: false}\n\nexport const TablePage = () => {\n  const [tableData, setTableData] = useState<TUser[]>(data)\n  const [activeFilter, setActiveFilter] = useState<string>('')\n  const [sortKeys, setSortKeys] = useState<{[key: string]: boolean}>(initialSortKeys)\n\n  const activeFilterHandler = (option: TButtonGroupOption) => {\n    const filteredArr = data.filter(item => item.isActive === option.status)\n    setTableData(filteredArr)\n    setActiveFilter(option.value)\n  }\n\n  const resetHandler = () => {\n    setActiveFilter('')\n    setSortKeys(initialSortKeys)\n    setTableData(data)\n  }\n\n  const sortHandler = (key: string) => {\n    let sortedArr = data\n    if (activeFilter) {\n      sortedArr = [...tableData]\n    }\n    if (sortKeys[key]) {\n      // @ts-ignore\n      sortedArr.sort((a, b) => a[key] > b[key] ? 1 : -1)\n    } else {\n      // @ts-ignore\n      sortedArr.sort((a, b) => a[key] > b[key] ? -1 : 1 )\n    }\n    setSortKeys({...sortKeys, [key]: !sortKeys[key]})\n    setTableData(sortedArr)\n  }\n\n  return (\n    <div className=\"table-page\">\n      <ButtonGroup\n        options={FILTER_OPTIONS}\n        onClick={activeFilterHandler}\n        active={activeFilter}\n      />\n      <Button\n        color={BUTTON_COLOR.DANGER}\n        onClick={resetHandler}\n      >\n        {BUTTON_TXT.RESET}\n      </Button>\n      <Table\n        headers={TABLE_HEADERS}\n        data={tableData}\n        sort={sortHandler}\n      />\n    </div>\n  )\n}"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,0CAA0C;AACpE,SAAQC,cAAc,EAAEC,aAAa,QAAO,aAAa;AACzD,SAAQC,KAAK,QAAO,8BAA8B;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAAmBC,QAAQ,QAAO,OAAO;AACzC,SAAQC,MAAM,QAAO,gCAAgC;AAErD,OAAO,cAAc;AACrB,SAAQC,YAAY,EAAEC,UAAU,QAAO,kCAAkC;AAAC;AAG1E,MAAMC,eAAe,GAAG;EAACC,OAAO,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAK,CAAC;AAEtD,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAUD,IAAI,CAAC;EACzD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAC5D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAA2BI,eAAe,CAAC;EAEnF,MAAMU,mBAAmB,GAAIC,MAA0B,IAAK;IAC1D,MAAMC,WAAW,GAAGjB,IAAI,CAACkB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKJ,MAAM,CAACK,MAAM,CAAC;IACxEX,YAAY,CAACO,WAAW,CAAC;IACzBL,eAAe,CAACI,MAAM,CAACM,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBX,eAAe,CAAC,EAAE,CAAC;IACnBE,WAAW,CAACT,eAAe,CAAC;IAC5BK,YAAY,CAACV,IAAI,CAAC;EACpB,CAAC;EAED,MAAMwB,WAAW,GAAIC,GAAW,IAAK;IACnC,IAAIC,SAAS,GAAG1B,IAAI;IACpB,IAAIW,YAAY,EAAE;MAChBe,SAAS,GAAG,CAAC,GAAGjB,SAAS,CAAC;IAC5B;IACA,IAAII,QAAQ,CAACY,GAAG,CAAC,EAAE;MACjB;MACAC,SAAS,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACH,GAAG,CAAC,GAAGI,CAAC,CAACJ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD,CAAC,MAAM;MACL;MACAC,SAAS,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACH,GAAG,CAAC,GAAGI,CAAC,CAACJ,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAE;IACrD;IACAX,WAAW,CAAC;MAAC,GAAGD,QAAQ;MAAE,CAACY,GAAG,GAAG,CAACZ,QAAQ,CAACY,GAAG;IAAC,CAAC,CAAC;IACjDf,YAAY,CAACgB,SAAS,CAAC;EACzB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,wBACzB,QAAC,WAAW;MACV,OAAO,EAAE7B,cAAe;MACxB,OAAO,EAAEkB,mBAAoB;MAC7B,MAAM,EAAEJ;IAAa;MAAA;MAAA;MAAA;IAAA,QACrB,eACF,QAAC,MAAM;MACL,KAAK,EAAER,YAAY,CAAC2B,MAAO;MAC3B,OAAO,EAAEP,YAAa;MAAA,UAErBnB,UAAU,CAAC2B;IAAK;MAAA;MAAA;MAAA;IAAA,QACV,eACT,QAAC,KAAK;MACJ,OAAO,EAAEjC,aAAc;MACvB,IAAI,EAAEW,SAAU;MAChB,IAAI,EAAEe;IAAY;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,GArDYhB,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}