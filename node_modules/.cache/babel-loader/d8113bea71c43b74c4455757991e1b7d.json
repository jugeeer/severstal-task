{"ast":null,"code":"var _jsxFileName = \"/Users/ivan.osipau/Documents/Projects/Severstal Task/severstal-task/src/pages/TablePage/TablePage.tsx\",\n  _s = $RefreshSig$();\nimport { INITIAL_ACTIVE_FILTER, INITIAL_SORT_KEYS, TABLE_HEADERS } from \"./constants\";\nimport { Table } from \"../../components/Table/Table\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport './styles.css';\nimport { TablePageActions } from \"./TablePageActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TablePage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [activeFilter, setActiveFilter] = useState(INITIAL_ACTIVE_FILTER);\n  const [sortKeys, setSortKeys] = useState(INITIAL_SORT_KEYS);\n  const resetHandler = () => {\n    setActiveFilter(INITIAL_ACTIVE_FILTER);\n    setSortKeys(INITIAL_SORT_KEYS);\n    setTableData(data);\n  };\n  const activeFilterHandler = useCallback(option => {\n    setTableData([...data.filter(item => item.isActive === option.status)]);\n    setActiveFilter(option);\n  }, [data]);\n  const sortHandler = useCallback(key => {\n    let sortedArr = data;\n    if (activeFilter) {\n      sortedArr = [...tableData];\n    }\n    if (sortKeys[key]) {\n      sortedArr.sort((a, b) => a[key] > b[key] ? 1 : -1);\n    } else {\n      sortedArr.sort((a, b) => a[key] > b[key] ? -1 : 1);\n    }\n    setSortKeys({\n      ...sortKeys,\n      [key]: !sortKeys[key]\n    });\n    setTableData(sortedArr);\n  }, [data, sortKeys, tableData]);\n  const fetchData = async () => {\n    try {\n      const resp = await fetch('http://localhost:3001/data');\n      const result = await resp.json();\n      setData(result);\n      setTableData(result);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-page\",\n    children: [/*#__PURE__*/_jsxDEV(TablePageActions, {\n      activeFilterHandler: activeFilterHandler,\n      activeFilter: activeFilter,\n      resetHandler: resetHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      headers: TABLE_HEADERS,\n      data: tableData,\n      sort: sortHandler,\n      activeFilter: activeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TablePage, \"bCs019OWD4p8H7X2Hql949vvkl8=\");\n_c = TablePage;\nvar _c;\n$RefreshReg$(_c, \"TablePage\");","map":{"version":3,"names":["INITIAL_ACTIVE_FILTER","INITIAL_SORT_KEYS","TABLE_HEADERS","Table","useCallback","useEffect","useState","TablePageActions","TablePage","data","setData","tableData","setTableData","activeFilter","setActiveFilter","sortKeys","setSortKeys","resetHandler","activeFilterHandler","option","filter","item","isActive","status","sortHandler","key","sortedArr","sort","a","b","fetchData","resp","fetch","result","json","e","console","error"],"sources":["/Users/ivan.osipau/Documents/Projects/Severstal Task/severstal-task/src/pages/TablePage/TablePage.tsx"],"sourcesContent":["import {ButtonGroup} from \"../../components/ButtonGroup/ButtonGroup\";\nimport {FILTER_OPTIONS, INITIAL_ACTIVE_FILTER, INITIAL_SORT_KEYS, TABLE_HEADERS} from \"./constants\";\nimport {Table} from \"../../components/Table/Table\"\nimport {useCallback, useEffect, useState} from \"react\";\nimport {Button} from \"../../components/Button/Button\";\nimport {TButtonGroupOption} from \"../../components/ButtonGroup/types\";\nimport './styles.css'\nimport {BUTTON_COLOR, BUTTON_TXT} from \"../../components/Button/constans\";\nimport {TUser} from \"../../types/types\";\nimport {TablePageActions} from \"./TablePageActions\";\n\n\nexport const TablePage = () => {\n  const [data, setData] = useState<TUser[]>([])\n  const [tableData, setTableData] = useState<TUser[]>([])\n  const [activeFilter, setActiveFilter] = useState<TButtonGroupOption>(INITIAL_ACTIVE_FILTER)\n  const [sortKeys, setSortKeys] = useState<{ [key: string]: boolean }>(INITIAL_SORT_KEYS)\n\n  const resetHandler = () => {\n    setActiveFilter(INITIAL_ACTIVE_FILTER)\n    setSortKeys(INITIAL_SORT_KEYS)\n    setTableData(data)\n  }\n\n  const activeFilterHandler = useCallback((option: TButtonGroupOption) => {\n    setTableData([...data.filter(item => item.isActive === option.status)])\n    setActiveFilter(option)\n  }, [data])\n\n  const sortHandler = useCallback((key: keyof TUser) => {\n    let sortedArr: TUser[] = data\n    if (activeFilter) {\n      sortedArr = [...tableData]\n    }\n    if (sortKeys[key]) {\n      sortedArr.sort((a, b) => a[key] > b[key] ? 1 : -1)\n    } else {\n      sortedArr.sort((a, b) => a[key] > b[key] ? -1 : 1)\n    }\n    setSortKeys({...sortKeys, [key]: !sortKeys[key]})\n    setTableData(sortedArr)\n  }, [data, sortKeys, tableData])\n\n  const fetchData = async () => {\n    try {\n      const resp = await fetch('http://localhost:3001/data');\n      const result = await resp.json();\n      setData(result);\n      setTableData(result)\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  return (\n    <div className=\"table-page\">\n      <TablePageActions\n        activeFilterHandler={activeFilterHandler}\n        activeFilter={activeFilter}\n        resetHandler={resetHandler}\n      />\n      <Table\n        headers={TABLE_HEADERS}\n        data={tableData}\n        sort={sortHandler}\n        activeFilter={activeFilter}\n      />\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}